package com.Appointments.Test.repo;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.Assert.assertNull;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.test.context.junit4.SpringRunner;

import com.Appointments.models.Appointment;
import com.Appointments.models.User;
import com.Appointments.repo.IAppointment;
import com.Appointments.repo.IUser;

@RunWith(SpringRunner.class)
@DataJpaTest
public class IAppointmentTest {
	     
    @Autowired
    private IAppointment repo;
    
    @Autowired
    private IUser urepo;
    
    private Appointment appointment;
    
    private Appointment appointment2;
    
    private User user;
    
    @BeforeEach
    public void setup() {
    	this.user = new User("patient", "password", "firstName", "lastName", "middleName", new ArrayList<>(),
				"19735678888");
    	urepo.save(user);
    	this.appointment = new Appointment( "08-09-2019", false, "My sister freaks out whenever someone takes her phone", user);
    	this.appointment2 = new Appointment("10-09-2019", false, "My brother freaks out whenever someone takes his phone", user);
    	repo.save(appointment2);
    	repo.save(new Appointment("11-09-2019", false, "My dog freaks out whenever someone takes his bone", user));
    }
    
    @Test
    void injectedComponentsAreNotNull(){
      assertThat(repo).isNotNull();
    }
    
    @Test
    public void testSaveNewAppointment() {
    	Appointment savedAppointment = repo.save(appointment);
    	
    	assertThat(savedAppointment.getId()).isGreaterThan(0);
    }
    
    @Test  
    public void testReadAllAppointment() {
    	repo.save(appointment);
    	List<Appointment> appointments = repo.findAll();
    	assertNotNull(appointments);
    	assertEquals(appointments.size(), 3);
    }
    
    @Test
    public void testFindAAppointment() {
    	Appointment foundAppointment = repo.findByDate("11-09-2019");
    	assertEquals("11-09-2019", foundAppointment.getDate());
    	assertEquals(2, foundAppointment.getId()); //This id is generated by the spring //This entity counts as the second entity inserted
    }
     
    @Test  
    public void testfindAppointmentAndUpdateAppointment() {
    	Appointment appointment = repo.findByDate("11-09-2019");
    	appointment.setDate("12-09-2019");
    	repo.save(appointment);
    	Appointment updatedAppointment = repo.findByDate("12-09-2019");
    	assertNotNull(updatedAppointment);
    	assertEquals(7, updatedAppointment.getId());//Making sure it has the same id as the previous one
    }
     
    @Test  
    public void testDeleteAppointment() {
    	repo.delete(appointment2);
    	Appointment appointment2 = repo.findByDate("10-09-2019");
    	assertNull(appointment2);
    }
    
}
